{"ast":null,"code":"var _jsxFileName = \"/Users/anaghasethuraman/Desktop/CMPE 273/MERN Stack/todolistapp/src/components/TaskInput.js\",\n    _s = $RefreshSig$();\n\n// the data entry for task - form\nimport React, { useContext, useState } from 'react';\nimport { GlobalContext } from './GlobalStore';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskInput = () => {\n  _s();\n\n  const [taskTitle, setTaskTitle] = useState(''); //using fn for creating a task from GlobalStore using hook -useContext\n\n  const {\n    createTask\n  } = useContext(GlobalContext);\n\n  const addTask = e => {\n    e.preventDefault(); //invoke createTask\n    //create object\n\n    const newTran = {\n      id: uuidv4(),\n      title: taskTitle,\n      done: false\n    };\n    createTask(newTran); //clearing the title input field after each task\n\n    setTaskTitle('');\n    e.target.reset(); //clear the field\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addTask,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"inputid\",\n        required: true,\n        onChange: e => setTaskTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"task-btn\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskInput, \"ZR24CVQBLPy/Rl0mrXtwDiW0hIc=\");\n\n_c = TaskInput;\n\n/*#__PURE__*/\n_jsxDEV(\"script\", {\n  children: \"document.getElementById(\\\"yourId\\\").focus()\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 1\n}, this);\n\nexport default TaskInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskInput\");","map":{"version":3,"sources":["/Users/anaghasethuraman/Desktop/CMPE 273/MERN Stack/todolistapp/src/components/TaskInput.js"],"names":["React","useContext","useState","GlobalContext","v4","uuidv4","TaskInput","taskTitle","setTaskTitle","createTask","addTask","e","preventDefault","newTran","id","title","done","target","reset","value"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAcC,UAAd,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,SAAQC,aAAR,QAA4B,eAA5B;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C,CADoB,CAEpB;;AACA,QAAM;AAACO,IAAAA;AAAD,MAAeR,UAAU,CAACE,aAAD,CAA/B;;AACA,QAAMO,OAAO,GAAIC,CAAF,IAAS;AACpBA,IAAAA,CAAC,CAACC,cAAF,GADoB,CAEpB;AACA;;AACA,UAAMC,OAAO,GAAC;AACVC,MAAAA,EAAE,EAACT,MAAM,EADC;AAEVU,MAAAA,KAAK,EAACR,SAFI;AAGVS,MAAAA,IAAI,EAAC;AAHK,KAAd;AAKAP,IAAAA,UAAU,CAACI,OAAD,CAAV,CAToB,CAUpB;;AAEAL,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAG,IAAAA,CAAC,CAACM,MAAF,CAASC,KAAT,GAboB,CAaH;AACpB,GAdD;;AAeA,sBACI;AAAA,2BAEI;AAAM,MAAA,QAAQ,EAAER,OAAhB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,SAAtB;AAAgC,QAAA,QAAQ,MAAxC;AAAyC,QAAA,QAAQ,EAAGC,CAAD,IAAKH,YAAY,CAACG,CAAC,CAACM,MAAF,CAASE,KAAV;AAApE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAhCD;;GAAMb,S;;KAAAA,S;;AAiCN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA,eAAeA,SAAf","sourcesContent":["// the data entry for task - form\nimport React,{useContext, useState} from 'react';\n\nimport {GlobalContext} from './GlobalStore';\nimport {v4 as uuidv4} from 'uuid';\nconst TaskInput = () => {\n    const [taskTitle, setTaskTitle] = useState('');\n    //using fn for creating a task from GlobalStore using hook -useContext\n    const {createTask} = useContext(GlobalContext);\n    const addTask =( e ) => {\n        e.preventDefault();\n        //invoke createTask\n        //create object\n        const newTran={\n            id:uuidv4(),\n            title:taskTitle,\n            done:false\n        }\n        createTask(newTran);\n        //clearing the title input field after each task\n\n        setTaskTitle('');\n        e.target.reset();//clear the field\n    }\n    return (\n        <div>\n            \n            <form onSubmit={addTask}>\n                <label>Task</label>\n                <input type='text' id='inputid' required onChange={(e)=>setTaskTitle(e.target.value)}/>\n                <button type='submit' className='task-btn'>Add</button>\n            </form>\n            \n        </div>\n       \n    )\n    \n}\n<script>\n    document.getElementById(\"yourId\").focus()\n    </script>\nexport default TaskInput\n   \n\n\n"]},"metadata":{},"sourceType":"module"}